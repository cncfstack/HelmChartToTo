name: Helm Chart ToTo
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'done.db'
      - 'error.log'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a multi-line script
        run: |
          set -x

          # 默认安装了 Helm
          # wget https://get.helm.sh/helm-v3.18.4-linux-amd64.tar.gz -O /tmp/helm-v3.18.4-linux-amd64.tar.gz
          # tar xf /tmp/helm-v3.18.4-linux-amd64.tar.gz -C /tmp

          # /tmp/linux-amd64/helm registry login --username=${{ secrets.HARBOR_PUSH_USERNAME }} --password=${{ secrets.HARBOR_PUSH_PASSWORD }} harbor.cncfstack.com

          done_line=`cat done.db`
          next_line=$(($done_line + 1)) 

          echo '' > error.log

          for chart in `tail -n +$next_line helmchart.list`
          do
              # 获取文件最后的文件名称
              helm_name=`basename $chart`
              wget $chart -O /tmp/$helm_name
              helm push /tmp/$helm_name oci://harbor.cncfstack.com/helmchart
          done

          # 处理完成后，需要更新 done.db 文件行数
          wc -l helmchart.list|awk '{print $1}' > done.db

          if [ -s error.log ];then
             cat error.log
          fi


          ##################
          # 处理 chartrepo 类型

          # tmp 目录添加到 .gitignore 中了，其中下载的文件不会推送到仓库中
          mkdir tmp
          cd tmp

          # 循环处理所有 chartrepo 仓库，
          for repo in `cat ../chartrepo.list`
          do
              repo_name=`echo $repo|awk '{print $1}'`
              repo_url=`echo $repo|awk '{print $2}'`
              helm repo add $repo_name $repo_url

              # 对每个仓库中，所有的项目全部执行同步
              # TODO：如果仓库很大可能无法一次执行完成
              for item in `helm search repo $repo_name |grep -v "^NAME"|awk '{print $1" "$2}'`
              do
                  item_name=`echo $item|awk '{print $1}'`
                  item_version=`echo $item|awk '{print $2}'`
                  helm pull $item_name  --version $item_version
                  helm push ${item_name}-${item_version}.tgz oci://harbor.cncfstack.com/helmchart/$repo_name
              done
          done

          # 全部处理完成后，返回仓库的根目录
          cd ..

          # 处理完成后，需要更新 done.db 文件行数
          wc -l chartrepo.list|awk '{print $1}' > chartrepo.done

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit changes
        run: |
          git add .
          git commit -m "Action Robot: sync helmchart lines [skip ci]"
          # [skip ci] 避免触发新工作流循环
      # 5. 推送更改
      - name: Push changes
        run: git push origin HEAD:${{ github.ref }}
